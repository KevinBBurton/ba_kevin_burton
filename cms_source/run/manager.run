#
# Build
#
create_boot_directory

import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/pkg/[drivers_nic_pkg] \
                  [depot_user]/src/nic_router \
                  [depot_user]/src/init \
                  [depot_user]/src/libc \
                  [depot_user]/src/vfs_lwip \
                  [depot_user]/src/vfs \
                  [depot_user]/src/stdcxx

build { manager rtcr_dummy nas}

#
# Generate config
#

install_config {
<config>
    <parent-provides>
	<service name="ROM"/>
	<service name="IRQ"/>
	<service name="IO_MEM"/>
	<service name="IO_PORT"/>
	<service name="PD"/>
	<service name="RM"/>
	<service name="CPU"/>
	<service name="LOG"/>
    </parent-provides>
    <default-route>
        <any-service> <parent/> <any-child/> </any-service>
    </default-route>
    <default caps="200"/>
    <start name="timer">
        <resource name="RAM" quantum="1M"/>
        <provides> <service name="Timer"/> </provides>
    </start>

    <start name="drivers" caps="1000" managing_system="yes">
        <resource name="RAM" quantum="32M"/>
        <binary name="init"/>
        <route>
            <service name="ROM" label="config"> <parent label="drivers.config"/> </service>
            <service name="Timer"> <child name="timer"/> </service>
            <service name="Uplink"> <child name="nic_router"/> </service>
            <any-service> <parent/> <any-child/> </any-service>
        </route>
    </start>
    
    <start name="nic_router" caps="1000">
    	<resource name="RAM" quantum="32M"/>
	<provides>
		<service name="Nic"/>
		<service name="Uplink"/>
	</provides>
	<config>
	    <policy label_prefix="drivers" domain="uplink"/>
		<policy label_prefix="manager" domain="manager"/>
		<policy label_prefix="rtcr_dummy" domain="rtcr"/>
		<policy label_prefix="nas" domain="nas"/>

		<domain name="uplink">
			<nat domain="manager" tcp-ports="100"/>
			<nat domain="rtcr" tcp-ports="100"/>
			<nat domain="nas" tcp-ports="100"/>
		</domain>
		<domain name="manager" interface="10.0.0.1/24">
		    <tcp dst="10.0.1.0/24">
		        <permit port="1025" domain="rtcr" />
		        <permit port="1026" domain="rtcr" />
		    </tcp>
		    <tcp dst="10.0.2.0/24">
		        <permit port="1027" domain="nas" />
		    </tcp>
		</domain>
		<domain name="rtcr" interface="10.0.1.1/24">
			<tcp dst="10.0.0.0/24">
			    <permit port="1024" domain="manager" />
			    <permit-any domain="manager" />
			</tcp>
		</domain>
		<domain name="nas" interface="10.0.2.1/24">

		</domain>
	</config>
    </start>

    <start name="manager">
        <resource name="RAM" quantum="10M"/>
        <provides> <service name="Manager"/> </provides>
        <config port="1024" nas_ip="10.0.2.2" nas_port="1027" rtcr_info_port="1025" rtcr_migr_port="1026">
            <vfs>
                <dir name="dev"> <log/> </dir>
                <dir name="socket">
                        <lwip ip_addr="10.0.0.2"
                              netmask="255.255.255.0"
                              gateway="10.0.0.1"/>
                </dir>
            </vfs>
            <libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
        </config>
        <route>
	    <service name="Nic"> <child name="nic_router"/> </service>
	    <any-service> <parent/> <any-child/> </any-service>
	</route>
    </start>
    
    <start name="rtcr_dummy_1">
        <binary name="rtcr_dummy"/>
        <resource name="RAM" quantum="10M"/>
        <config name="dummy_1" ip="10.0.1.2" mac="57406533673528" manager_ip="10.0.0.2" manager_port="1024" info_port="1025" migr_port="1026">
            <vfs>
                <dir name="dev"> <log/> </dir>
                <dir name="socket"> <lwip ip_addr="10.0.1.2"
                                          netmask="255.255.255.0"
                                          gateway="10.0.1.1"/>
                </dir>
            </vfs>
            <libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
        </config>
        <route>
	    <service name="Nic"> <child name="nic_router"/> </service>
	    <service name="Manager"> <child name="manager"/> </service>
	    <any-service> <parent/> <any-child/> </any-service>
	</route>
    </start>

    <start name="rtcr_dummy_2">
        <binary name="rtcr_dummy"/>
        <resource name="RAM" quantum="20M"/>
        <config name="dummy_2" ip="10.0.1.3" mac="57406533673529" manager_ip="10.0.0.2" manager_port="1024" info_port="1025" migr_port="1026">
            <vfs>
                <dir name="dev"> <log/> </dir>
                <dir name="socket"> <lwip ip_addr="10.0.1.3"
                                          netmask="255.255.255.0"
                                          gateway="10.0.1.1"/>
                </dir>
            </vfs>
            <libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
        </config>
        <route>
            <service name="Nic"> <child name="nic_router"/> </service>
	    <service name="Manager"> <child name="manager"/> </service>
            <any-service> <parent/> <any-child/> </any-service>
        </route>
    </start>

    <start name="nas">
        <resource name="RAM" quantum="10M"/>
        <config port="1027">
            <vfs>
                <dir name="dev"> <log/> </dir>
                <dir name="socket">
                    <lwip ip_addr="10.0.2.2"
                          netmask="255.255.255.0"
                          gateway="10.0.2.1"/>
                </dir>
            </vfs>
            <libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
        </config>
        <route>
            <service name="Nic"> <child name="nic_router"/> </service>
            <any-service> <parent/> <any-child/> </any-service>
        </route>
    </start>

</config> }

#
# Boot image
#

build_boot_image { manager rtcr_dummy nas}

#
# Qemu config
#

proc qemu_nic_model {} {
    if [have_spec x86]         { return e1000 }
    if [have_spec lan9118]     { return lan9118 }
    if [have_spec zynq]        { return cadence_gem }
    return nic_model_missing
}

append qemu_args " -nographic "

run_genode_until forever
